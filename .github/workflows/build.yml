name: Hector9000Release

on:
  release:
    types: [ published ]
jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 🏗 Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: 🏗 Install build dependencies
        run: |
          python -m pip install wheel --user
      - name: 🔨 Build a binary wheel and a source tarball
        run: |
          python setup.py sdist bdist_wheel
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

 # publish-on-pypi:
 #     name: 📦 Publish tagged releases to PyPI
 #     if: github.event_name == 'release'
 #     needs: publish-on-testpypi
 #     runs-on: ubuntu-latest
 #     steps:
 #       - name: ⬇ Download build result
 #         uses: actions/download-artifact@v1
 #         with:
 #           name: dist
 #           path: dist
 #       - name: 📦 Publish to index
 #         uses: pypa/gh-action-pypi-publish@master
 #         with:
 #           password: ${{ secrets.pypi_password }}

  notify-custopizer-build:
    name: 📧 Notify OctoPi-UpToDate
    if: github.event_name == 'release'
   # needs: publish-on-pypi
    runs-on: ubuntu-latest
    steps:
      - name: 👀 Determine version
        run: |
          HECTOR_VERSION=$(echo $GITHUB_REF | cut -d/ -f3)
          echo "HECTOR_VERSION=$HECTOR_VERSION" >> $GITHUB_ENV
      - name: 🚀 Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPODISPATCH_TOKEN }}
          repository: H3c702/Hector9000-Image
          event-type: hector_release
          client-payload: '{"version": "${{ env.HECTOR_VERSION }}"}'